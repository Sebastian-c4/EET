OUTER_SPRINT option ~~
OUTER_WHILE NOT (IS_AN_INT %option%) || (option > 5) || (option < 1) BEGIN
	PRINT ~Choose conversion platform:
 1. BG:EE -> EET
 2. EET -> BG:EE
 3. BGT -> EET
 4. custom
 5. any platform -> EET cpmvars (baf/bcs/d/dlg/tbl/tp2/tpa/tph/tpp only)~
	ACTION_READLN option
END

OUTER_SPRINT type ~~
ACTION_IF (option < 5) BEGIN
	OUTER_WHILE NOT (IS_AN_INT %type%) || (type > 3) || (type < 1) BEGIN
		PRINT ~Choose conversion type:
 1. full convertion
 2. only patch files
 3. only rename files~
		ACTION_READLN type
	END
END ELSE BEGIN
	OUTER_SET type = 1
	OUTER_SPRINT platform ~~
	OUTER_WHILE NOT (IS_AN_INT %platform%) || (platform > 4) || (platform < 1) BEGIN
		PRINT ~Choose which platform should be converted to cpmvars:
 1. BG:EE
 2. EET
 3. BGT
 4. Tutu~
		ACTION_READLN platform
	END
END

OUTER_SPRINT bgt_lite ~~
ACTION_IF (option = 3) BEGIN
	OUTER_WHILE NOT (IS_AN_INT %bgt_lite%) || (bgt_lite > 2) || (bgt_lite < 1) BEGIN
		PRINT ~Should the conversion take into account BG1 unique items and BAM icons that are not unique in BGT?
 1. No (skips usually unneeded changes)
 2. Yes~
		ACTION_READLN bgt_lite
	END
END

PRINT ~~
PRINT ~PCU conversion...~

ACTION_IF (option = 1) BEGIN //BG:EE -> EET
	INCLUDE ~EET_modConverter/lib/PCU_Dict_bgee-eet.tph~
END ELSE ACTION_IF (option = 2) BEGIN //EET -> BG:EE
	INCLUDE ~EET_modConverter/lib/PCU_Dict_eet-bgee.tph~
END ELSE ACTION_IF (option = 3) BEGIN //BGT -> EET
	INCLUDE ~EET_modConverter/lib/PCU_Dict_bgt-eet.tph~
END ELSE ACTION_IF (option = 4) BEGIN // custom
	INCLUDE ~EET_modConverter/lib/PCU_Dict_custom.tph~
END ELSE BEGIN //any platform -> cpmvars
	INCLUDE ~EET_modConverter/lib/PCU_Dict_cpmvars.tph~
END

//FOR variables
OUTER_SET count = 0
OUTER_SET cntrow = 0
OUTER_SET cnt = 0
OUTER_SET cntare = 0
OUTER_SET cntcre = 0
OUTER_SET cntwav = 0

//reporting variables
OUTER_SET are_check = 0
OUTER_SET baf_check = 0
OUTER_SET bcs_check = 0
OUTER_SET cre_check = 0
OUTER_SET d_check = 0
OUTER_SET dlg_check = 0
OUTER_SET eff_check = 0
OUTER_SET gam_check = 0
OUTER_SET itm_check = 0
OUTER_SET pro_check = 0
OUTER_SET spl_check = 0
OUTER_SET sto_check = 0
OUTER_SET tp2_check = 0
OUTER_SET tra_check = 0
OUTER_SET vef_check = 0
OUTER_SET vvc_check = 0
OUTER_SET wed_check = 0
OUTER_SET wmp_check = 0
OUTER_SET tbl_check = 0
OUTER_SET ignore_check = 0
OUTER_SET ren_check = 0

COPY + ~EET_modConverter/Filelist.txt~ ~EET_modConverter~
	REPLACE_TEXTUALLY ~%WNL%~ ~%LNL%~
	SPRINT list_input ~	~
	SET number = 0
	REPLACE_EVALUATE CASE_INSENSITIVE ~^Input[/\\]+\(.+\)$~ BEGIN
		SET number = number + 1
		PATCH_IF (number = 1) BEGIN
			SPRINT list_number ~%number%~
		END ELSE BEGIN
			SPRINT list_number ~%list_number%
%number%~
		END
		SPRINT list_input ~%list_input%%MATCH1%	~
	END
	~~

OUTER_PATCH_SAVE ~list_input~ ~%list_input%~ BEGIN
	REPLACE_TEXTUALLY ~ ~ ~?~
	REPLACE_TEXTUALLY ~\\~ ~/~
END

OUTER_PATCH_SAVE ~list_output~ ~%list_input%~ BEGIN
	PATCH_IF (option != 5) AND (type != 2) BEGIN
		PHP_EACH remapped_2da AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.2DA\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_are AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.ARE\)~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(HT\.BMP\)~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(LM\.BMP\)~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(SR\.BMP\)~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(LN\.BMP\)~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.INI\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_bam AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.BAM\)~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.VVC\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_bmp AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.BMP\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_bcs AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.BCS\)~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.BAF\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_cre AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.CRE\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_dlg AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.D\)~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.DLG\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_eff AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.EFF\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_itm AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.ITM\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_mos AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.MOS\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_mve AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.MVE\)~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.WBM\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_pro AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.PRO\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_spl AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.SPL\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_sto AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.STO\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_tis AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.TIS\)~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.TIZ\)~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.MOS\)~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.WED\)~ ~\1%resref_index_dest%\2~
			INNER_PATCH_SAVE pvrz_source ~%resref_index_source%~ BEGIN
				REPLACE_TEXTUALLY ~^\(.\).\(.+\)$~ ~\1\2~
			END
			INNER_PATCH_SAVE pvrz_dest ~%resref_index_dest%~ BEGIN
				REPLACE_TEXTUALLY ~^\(.\).\(.+\)$~ ~\1\2~
			END
			REPLACE_TEXTUALLY ~\([	/]+\)%pvrz_source%\([0-9]+\.PVRZ\)~ ~\1%pvrz_dest%\2~
		END
		PHP_EACH remapped_vef AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.VEF\)~ ~\1%resref_index_dest%\2~
		END
		PHP_EACH remapped_wav AS resref_index_source => resref_index_dest BEGIN
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.WAV\)~ ~\1%resref_index_dest%\2~
			REPLACE_TEXTUALLY ~\([	/]+\)%resref_index_source%\(\.WFX\)~ ~\1%resref_index_dest%\2~
		END
	END
END

COPY + ~.../blank.txt~ ~EET_modConverter/Filelist.txt~
APPEND_OUTER + ~EET_modConverter/Filelist.txt~ ~%list_number%~
APPEND_COL_OUTER + ~EET_modConverter/Filelist.txt~ ~%list_input%~
APPEND_COL_OUTER + ~EET_modConverter/Filelist.txt~ ~%list_output%~

//conversion
PRINT ~Please be patient during the conversion process. This may take some time...~

COPY + ~EET_modConverter/Filelist.txt~ ~EET_modConverter~
	REPLACE_TEXTUALLY ~ ~ ~	~ //just for easier importing to spreadsheet if needed
	COUNT_2DA_ROWS 3 "cntrow" //count every single row
	PATCH_PRINT ~%cntrow% entries parsed, commencing patching...~
	FOR (count = 0; count < "%cntrow%"; count = count + 1) BEGIN
		SET cntcurrent = "%count%" + 1
		READ_2DA_ENTRY "%count%" 1 3 "patch_name"
		READ_2DA_ENTRY "%count%" 2 3 "patch_output"
		INNER_PATCH_SAVE ~patch_name~ ~%patch_name%~ BEGIN
			REPLACE_TEXTUALLY ~\?~ ~ ~
		END
		INNER_PATCH_SAVE ~patch_ext~ ~%patch_name%~ BEGIN
			REPLACE_TEXTUALLY ~^.+\.~ ~~
		END
		INNER_PATCH_SAVE ~patch_output~ ~%patch_output%~ BEGIN
			REPLACE_TEXTUALLY ~\?~ ~ ~
		END
		INNER_PATCH_SAVE ~patch_dir~ ~%patch_output%~ BEGIN
			REPLACE_TEXTUALLY ~[^/]+$~ ~~
		END
		SET checked = 0
		SET updated = 0
		PATCH_IF (NOT ~%patch_name%~ STR_EQ ~%patch_output%~) BEGIN
			PATCH_PRINT ~Renaming %patch_name% to %patch_output%...~
			SET updated = 1
			SET ren_check = ren_check + 1
		END
		PATCH_SILENT
		INNER_ACTION BEGIN
			ACTION_MATCH ~%patch_ext%~ WITH ~2DA~ ~BAM~ ~BMP~ ~MOS~ ~MVE~ ~PLT~ ~TIS~ ~TIZ~ ~WAV~ ~WFX~ ~WBM~ BEGIN
				ACTION_IF (updated = 1) BEGIN
					MKDIR ~EET_modConverter/Output/%patch_dir%~
					COPY_LARGE ~EET_modConverter/Input/%patch_name%~ ~EET_modConverter/Output/%patch_output%~
				END
			END
			DEFAULT
				COPY - ~EET_modConverter/Input/%patch_name%~ ~.../Output/%patch_output%~
					PATCH_IF (type < 3) BEGIN
						LAUNCH_PATCH_MACRO ~EET_PCU_core~
					END
			END
			ACTION_IF (checked = 0) BEGIN
				OUTER_SET ignore_check = ignore_check + 1
				PRINT ~%cntcurrent%/%cntrow% Ignoring patching %patch_name%...~
			END ELSE ACTION_IF ("%updated%" = 1) BEGIN
				MKDIR ~EET_modConverter/Output/%patch_dir%~
				COPY ~.../Output/%patch_output%~ ~EET_modConverter/Output/%patch_output%~
			END
		END
		PATCH_VERBOSE
	END

PRINT ~Conversion complete. Statistics:
ARE %are_check%
BAF %baf_check%
BCS %bcs_check%
CRE %cre_check%
D   %d_check%
DLG %dlg_check%
EFF %eff_check%
GAM %gam_check%
ITM %itm_check%
PRO %pro_check%
SPL %spl_check%
STO %sto_check%
TP* %tp2_check%
TRA %tra_check%
VEF %vvc_check%
VVC %vvc_check%
WED %wed_check%
WMP %wmp_check%
TBL %tbl_check%

%ignore_check% files patching ignored.
%ren_check% files renamed.~

AT_NOW ~copy SETUP-EET_modConverter.DEBUG EET_modConverter%os_slash%Output%os_slash%SETUP-EET_modConverter.DEBUG~ //file is blank when copied within weidu

PRINT ~Creating log file. Do not close this window. This may take some time...~
OUTER_SPRINT log ~~
COPY + ~EET_modConverter/Output/SETUP-EET_modConverter.DEBUG~ ~EET_modConverter/Output~
	REPLACE_EVALUATE CASE_INSENSITIVE ~^\(Patching EET_modConverter.+\)$~ BEGIN
		SPRINT log ~%log%%MATCH1%%LNL%~
	END
	~~
	REPLACE_EVALUATE CASE_INSENSITIVE ~^\(Analyzing EET_modConverter.+\)$~ BEGIN
		SPRINT log ~%log%%MATCH1%%LNL%~
	END
	~~
	REPLACE_EVALUATE CASE_INSENSITIVE ~^\(Renaming .+\)$~ BEGIN
		SPRINT log ~%log%%MATCH1%%LNL%~
	END
	~~

DELETE + ~EET_modConverter/Output/SETUP-EET_modConverter.DEBUG~
